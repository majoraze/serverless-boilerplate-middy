create:
  warmup: true
  handler: src/services/drivers/endpoints/create.handler
  events:
    - http:
        path: drivers
        method: post
        cors: true
        documentation:
          summary: Method for create driver
          tags:
            - "Drivers"
          requestHeaders:
          -
            name: "Authorization"
            description: "Bearer Token"
            required: true
          requestModels:
            "application/json": "DriverCreateReq"
          methodResponses:
            -
              statusCode: '200'
              responseModels:
                "application/json": "ResponseId"
            -
              statusCode: '500'
              responseModels:
                "text/plain": "ResponseError"

update:
  warmup: true
  handler: src/services/drivers/endpoints/update.handler
  events:
    - http:
        path: drivers/{id}
        method: put
        cors: true
        documentation:
          summary: Method for get list of drivers
          requestHeaders:
          -
            name: "Authorization"
            description: "Bearer Token"
            required: true
          tags:
            - "Drivers"
          pathParams:
            -
              name: "id"
              description: "Id of the driver"
              required: true
          requestModels:
            "application/json": "DriverUpdateReq"
          methodResponses:
            -
              statusCode: '200'
              responseModels:
                "application/json": ResponseId

findOne:
  warmup: true
  handler: src/services/drivers/endpoints/findOne.handler
  events:
    - http:
        path: drivers/{id}
        method: get
        cors: true
        caching:
          enabled: true
          ttlInSeconds: 300
          perKeyInvalidation:
            requireAuthorization: false
          cacheKeyParameters:
            - name: request.path.id
        documentation:
          summary: Method for get one driver
          requestHeaders:
          -
            name: "Authorization"
            description: "Bearer Token"
            required: true
          tags:
            - "Drivers"
          pathParams:
            -
              name: "id"
              description: "Id of the driver"
              required: true
          methodResponses:
            -
              statusCode: '200'
              responseModels:
                "application/json": ResponseId
            -
              statusCode: '400'
              description: 'Not Found'
              responseModels:
                "text/plain": ResponseError

find:
  warmup: true
  handler: src/services/drivers/endpoints/find.handler
  events:
    - http:
        path: drivers
        method: get
        cors: true
        documentation:
          tags:
            - "Drivers"
          summary: Method for get list of drivers
          requestHeaders:
            -
              name: "Authorization"
              description: "Bearer Token"
              required: true
          queryParams:
            -
              name: limit
              type: number
              required: false
            -
              name: sort
              type: string
              required: false
            -
              name: page
              type: number
              required: false
            -
              name: select
              type: string
              required: false
            -
              name: truckOwner
              type: string
              required: false
            -
              name: loaded
              type: string
              required: false
            -
              name: period
              type: string
              required: false
          methodResponses:
            -
              statusCode: '200'
              responseModels:
                "application/json": DriverFindAllRes
            -
              statusCode: '422'
              description: 'Validation Error'
              responseModels:
                "text/plain": ResponseError
            -
              statusCode: '500'
              description: 'Internal Server Error'
              responseModels:
                "text/plain": ResponseError